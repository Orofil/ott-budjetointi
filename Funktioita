/* Tilitapahtuman vienti tietokantaan (tapahtuma transactions tauluun,
tilinumerot accounts tauluun) */



CREATE OR REPLACE FUNCTION add_transaction(
    p_date DATE,
    p_reference_number TEXT,
    p_description TEXT,
    p_amount DOUBLE PRECISION,
    p_account_from TEXT,
    p_account_to TEXT,
    p_category_id INTEGER
) RETURNS UUID AS $$
DECLARE
    new_transaction_id UUID;
BEGIN
    -- Lisätään tapahtuma
    IF p_amount < 0
    THEN
      INSERT INTO public.expense_transactions (
          date, reference_number, description, amount, 
          account_from, account_to, category_id
      )
      VALUES (
          p_date, p_reference_number, p_description, ABS(p_amount),
          p_account_from, p_account_to, p_category_id
      )
      RETURNING transaction_id INTO new_transaction_id;
    ELSE
      INSERT INTO public.income_transactions (
          date, reference_number, description, amount, 
          account_from, account_to, category_id
      )
      VALUES (
          p_date, p_reference_number, p_description, ABS(p_amount),
          p_account_from, p_account_to, p_category_id
      )
      RETURNING transaction_id INTO new_transaction_id;
    END IF;

    -- Palautetaan uuden tapahtuman UUID
    RETURN new_transaction_id;
END;
$$ LANGUAGE plpgsql;


-- Positiivinen summa
SELECT add_transaction(
    '2024-03-06',
    '9876543210',
    'Palkka',
    1500.00,  -- Positiivinen summa
    'FI123456789',  -- Tilinumero (account_from)
    'FI987654321',  -- Tilinumero (account_to)
    1  -- Kategoria ID (tämä voi olla income_category taulusta, ei tarvitse olla käyttäjän oma)
);

-- Negatiivinen summa
SELECT add_transaction(
    '2024-03-06',
    '9876543211',
    'Ruokakauppa',
    -30.00,  -- Negatiivinen summa
    'FI123456789',  -- Tilinumero (account_from)
    'FI987654321',  -- Tilinumero (account_to)
    2  -- Kategoria ID (tämä voi olla expense_category taulusta, ei tarvitse olla käyttäjän oma)
);


/* Uuden kategorian lisääminen*/

CREATE OR REPLACE FUNCTION add_user_category(
    p_user_id UUID,
    p_category_name TEXT,
    p_category_type INTEGER  -- 0 = expense, 1 = income
) RETURNS VOID AS $$
BEGIN
    IF p_category_type = 0 THEN
        -- Lisää uusi kategoria expense_categories tauluun
        INSERT INTO public.expense_categories (user_id, category_name)
        VALUES (p_user_id, p_category_name);
    ELSIF p_category_type = 1 THEN
        -- Lisää uusi kategoria income_categories tauluun
        INSERT INTO public.income_categories (user_id, category_name)
        VALUES (p_user_id, p_category_name);
    END IF;
END;
$$ LANGUAGE plpgsql;


SELECT add_user_category(
    '570f6c1f-0061-4c44-8770-b7ad15cc29a1',
    'Uusi tulo kategoria',
    1  -- Income
);

SELECT add_user_category(
    '570f6c1f-0061-4c44-8770-b7ad15cc29a1',
    'Uusi meno kategoria',
    2  -- Expense
);





